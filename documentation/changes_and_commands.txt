# Documentation: File Moves (Cleanup)

## Date: [Auto-generated]

### Files moved to `documentation/` directory:
- README.md
- app_summary.txt
- CHANGELOG.txt
- remake_plan.txt
- why_flask_python.txt

### Commands run:
- Created `documentation/` directory
- Moved all .txt and .md documentation files from project root to `documentation/`

This keeps the project root clean and all documentation organized in one place.

---

## [Update] .gitignore for App Tracking and Pycache Exclusion

### Date: [Auto-generated]

### Change:
- Updated `.gitignore` to ensure the app code is tracked by git, but the following are excluded:
  - `venv/` (virtual environment)
  - `__pycache__/` (Python bytecode cache)
  - `.env` (environment variables)
  - `*.json` (user data files)

### Command/Action:
- Edited `.gitignore` to:
  ```
  venv/
  __pycache__/
  .env
  *.json
  ```

### Reason:
- To ensure the application code is always pushed to git, but sensitive or unnecessary files (like caches and user data) are not.

---

## [Feature] Smart Add: Edit Habits via Natural Language

### Date: [Auto-generated]

### Change:
- Extended the Smart Add functionality to support editing habits using natural language.
- The AI prompt now instructs to extract `old_name`, `name`, `schedule`, and `start_date` for edit actions, and to set `action` to 'edit'.
- The backend now processes 'edit' actions by matching the old habit name (case-insensitive), and updating the habit with new values if provided.

### Command/Action:
- Modified `app/app_flask.py`:
  - Updated the Smart Add prompt and logic to support editing habits.

### Reason:
- To allow users to change (edit) their habits using natural language through the Smart Add interface.

---

## [Update] Smart Add: Pass User's Habits to AI

### Date: [Auto-generated]

### Change:
- The Smart Add prompt now includes the logged-in user's current habits (as JSON) so the AI can use the correct names for add, remove, and edit actions.

### Command/Action:
- Modified `app/app_flask.py`:
  - Injected the user's current habits into the Smart Add prompt.

### Reason:
- To ensure the AI always has access to the user's actual habit names, improving accuracy for all Smart Add actions.

---

## [Refactor] Rebrand and Modularize Smart Add to AI Powered Planning

### Date: [Auto-generated]

### Change:
- Renamed the `smart_add` endpoint and function to `ai_planning` for clarity and branding.
- Updated the frontend (index.html) to rebrand all Smart Add UI and JS to AI Powered Planning & Habit Management, and to use the new endpoint.

### Command/Action:
- Modified `app/app_flask.py` and `app/templates/index.html`:
  - Changed `@app.route('/smart_add', ...)` and `def smart_add()` to `@app.route('/ai_planning', ...)` and `def ai_planning()`.
  - Updated all UI and JS references from Smart Add to AI Powered Planning.

### Reason:
- To better reflect the feature's purpose as AI-powered planning and habit management, and keep the UI/UX consistent.

---

## [Merge] Unified AI Planning and Chat Functionality

### Date: [Auto-generated]

### Change:
- Merged the chat and AI planning (Smart Add) backend logic into a single `/ai_planning` endpoint and function.
- Removed the `/chat` endpoint and all related frontend UI and JS.
- The AI Powered Planning box now handles both habit management and general schedule questions.

### Command/Action:
- Modified `app/app_flask.py` and `app/templates/index.html`:
  - Removed the `/chat` route and function.
  - Removed the chat box and chat JS from the frontend.
  - Updated `/ai_planning` to handle both planning and chat requests.

### Reason:
- To simplify the user experience and codebase by unifying all AI-powered planning and chat into a single interface.

---

## [Feature] Persistent Per-User Chat History & Clear Button

### Date: [Auto-generated]

### Change:
- Added persistent chat history for each user, loaded on login and shown in the chatbox.
- Added a "Clear Chat" button to erase chat history for the logged-in user.

### Command/Action:
- Modified `app/app_flask.py` to add `/get_chat_history` and `/clear_chat_history` endpoints.
- Modified `app/templates/index.html` to load chat history and add a clear button.

### Reason:
- To provide a persistent, user-specific chat experience and allow users to clear their chat history as needed.
